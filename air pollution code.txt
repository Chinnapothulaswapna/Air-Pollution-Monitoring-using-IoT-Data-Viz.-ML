#include <Wire.h>
#include <Adafruit_Sensor.h>
#include <MQUnifiedsensor.h>
#include <BlynkSimpleEsp32.h>

#define MQ135_PIN A0
#define MQ6_PIN A1
#define LED_PIN 13

char auth[] = "Your_Blynk_Auth_Token";
char ssid[] = "Your_WiFi_SSID";
char pass[] = "Your_WiFi_Password";

MQUnifiedsensor mq135(MQ135_PIN, models::MiCS5524);
MQUnifiedsensor mq6(MQ6_PIN, models::MiCS5524);

void setup() {
  Serial.begin(115200);
  Blynk.begin(auth, ssid, pass);

  mq135.begin();
  mq6.begin();

  pinMode(LED_PIN, OUTPUT);

  Blynk.virtualWrite(V5, "Air Quality Monitoring");
}

void loop() {
  Blynk.run();

  float ppmMQ135 = mq135.readSensor();
  float ppmMQ6 = mq6.readSensor();

  Serial.print("MQ135 PPM: ");
  Serial.println(ppmMQ135);
  Serial.print("MQ6 PPM: ");
  Serial.println(ppmMQ6);

  Blynk.virtualWrite(V0, ppmMQ135);
  Blynk.virtualWrite(V1, ppmMQ6);

  checkAirQuality(ppmMQ135, ppmMQ6);

  delay(5000); // Delay for 5 seconds between readings
}

void checkAirQuality(float ppmMQ135, float ppmMQ6) {
  if (ppmMQ135 > 1000 || ppmMQ6 > 500) {
    digitalWrite(LED_PIN, HIGH);
    Blynk.notify("Air quality deteriorating!");

    // Send data to a cloud service for ML analysis
    // Implement ML response handling here
  } else {
    digitalWrite(LED_PIN, LOW);
  }
}
